<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.example.daegam" />

	<!-- 127.0.0.1:8080/daegam/chat/server.do가 서버의 주소 -->
	<websocket:handlers>
		<websocket:mapping path="/chat/server.do" handler="serverHandler" />
	</websocket:handlers>

	<beans:bean id="serverHandler"
		class="com.example.daegam.websocket.SocketServerHandler" />

	<!-- multipart -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="1000000" />
	</beans:bean>
	
	<!-- JDBC 템플릿 설정과 유사하다. -->
	<beans:bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<beans:property name="hostName" value="211.110.130.80" />
		<beans:property name="port" value="6379" />
		<beans:property name="password" value="class601" />
		<beans:property name="usePool" value="true" />
	</beans:bean>

	<beans:bean id="redisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate">
		<beans:property name="connectionFactory" ref="connectionFactory" />
	</beans:bean>
</beans:beans>
